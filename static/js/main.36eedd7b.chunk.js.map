{"version":3,"sources":["components/styles/assets/icon-rock.svg","components/styles/assets/icon-paper.svg","components/styles/assets/icon-scissors.svg","components/styles/assets/logo.svg","components/styles/assets/bg-triangle.svg","components/styles/assets/icon-close.svg","components/styles/assets/image-rules.svg","state/Context.js","components/styles/theme.js","components/Scoreboard.js","components/SelectorContainer.js","components/Selector.js","components/GamePhase1View.js","components/GamePhaseContainer.js","components/PickText.js","components/styles/stylePropHelpers.js","components/GamePhase2View.js","components/GamePhase3View.js","components/Button.js","components/GameOver.js","components/GamePhase4View.js","components/PlayArea.js","components/RulesModal.js","components/RulesSection.js","components/styles/GlobalStyle.js","state/Reducer.js","logic/determineWinner.js","components/App.js","index.js"],"names":["module","exports","GameContext","React","createContext","paperBgTo","rockBgTo","ScoreboardContent","styled","div","ScoreCard","ScoreTextHeading","p","ScoreText","Scoreboard","useContext","state","src","LogoSVG","alt","score","SelectorContainer","styleProps","fromColor","toColor","shadow","position","css","clickable","props","selected","gameOver","Selector","icon","GamePhase1ViewContainer","backgroundTriangle","GamePhase1View","dispatch","onClick","type","paperSVG","scissorsSVG","rockSVG","GamePhase2ViewContainer","PickText","left","right","chooseUserStyleProps","userPick","chooseUserIcon","chooseComputerStyleProps","computerPick","chooseComputerIcon","GamePhase2View","useEffect","setTimeout","GamePhase3View","Button","button","inverted","GameOverContainer","GameOverText","GameOver","winner","GamePhase4View","PlayArea","gameStage","RulesModalContainerBg","RulesModalContainer","RulesModal","gameRulesSVG","closeButtonSVG","handleClick","RulesSectionContainer","RulesSection","useState","modalIsOpen","toggleModalIsOpen","GlobalStyle","createGlobalStyle","reset","Reducer","action","computerChoice","Math","floor","random","getComputerChoice","result","userChoice","response","message","determineWinner","initialState","App","useReducer","className","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36eedd7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-rock.8ce1e109.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-paper.69a8c2e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-scissors.bec2f9b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.759a2075.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg-triangle.1fd44bdf.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.919ab92a.svg\";","module.exports = __webpack_public_path__ + \"static/media/image-rules.5d74d25d.svg\";","import React from 'react';\r\n\r\nconst GameContext = React.createContext();\r\n\r\nexport default GameContext;","// BREAKPOINTS\r\nexport const mobileBreakpoint = '375px';\r\nexport const desktopBreakpoint = '1366px';\r\n\r\n// COLORS\r\n// Primary\r\nexport const paperBgFrom = 'hsl(230, 89%, 62%)';\r\nexport const paperBgTo = 'hsl(230, 89%, 65%)';\r\nexport const paperShadow = '#2945c3';\r\n\r\nexport const rockBgFrom = 'hsl(349, 71%, 52%)';\r\nexport const rockBgTo = 'hsl(349, 70%, 56%)';\r\nexport const rockShadow = '#9f1435';\r\n\r\nexport const scissorsBgFrom = 'hsl(39, 89%, 49%)';\r\nexport const scissorsBgTo = 'hsl(40, 84%, 53%)';\r\nexport const scissorsShadow = '#c76b1e';\r\n\r\n// Text\r\nexport const lightText = '#F8FEFF';\r\nexport const darkText = 'hsl(229, 25%, 31%)';\r\nexport const scoreText = 'hsl(229, 64%, 46%)';\r\nexport const headerOutline = 'hsl(217, 16%, 45%)';\r\n// Background\r\nexport const bodyBgFrom = 'hsl(214, 47%, 23%)';\r\nexport const bodyBgTo = 'hsl(237, 49%, 15%)';\r\n\r\n// FONTS\r\n// - Family: [Barlow Semi Condensed](https://fonts.google.com/specimen/Barlow+Semi+Condensed)\r\nexport const fontWeightMed = '600';\r\nexport const fontWeightBold = '700';\r\n","import React, { useContext } from 'react';\r\nimport GameContext from '../state/Context';\r\nimport styled from 'styled-components';\r\nimport LogoSVG from './styles/assets/logo.svg';\r\nimport { headerOutline, scoreText, darkText, fontWeightBold, desktopBreakpoint } from './styles/theme';\r\n\r\nconst ScoreboardContent = styled.div`\r\n  margin: 30px auto 0;\r\n  max-width: 316px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border: 3px solid ${headerOutline};\r\n  border-radius: 15px;\r\n  img {\r\n    object-fit: contain;\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    width: 80px;\r\n    margin: 22px;\r\n  }\r\n  @media screen and (min-width: ${desktopBreakpoint}) {\r\n    max-width: 704px;\r\n    margin: 30px auto 0px;\r\n    img {\r\n      width: 150px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ScoreCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  border: 1px solid black;\r\n  background-color: white;\r\n  border-radius: 7px;\r\n  margin: 12px;\r\n  width: 84px;\r\n  height: 74px;\r\n\r\n  @media screen and (min-width: ${desktopBreakpoint}) {\r\n    width: 150px;\r\n    height: 115px;\r\n  }\r\n`;\r\n\r\nconst ScoreTextHeading = styled.p`\r\n  font-size: .66rem;\r\n  font-weight: ${fontWeightBold};\r\n  color: ${scoreText};\r\n\r\n  @media screen and (min-width: ${desktopBreakpoint}) {\r\n    letter-spacing: 2px;\r\n    line-height: 1.4;\r\n    font-size: 1rem;\r\n  }\r\n`\r\nconst ScoreText = styled.p`\r\n  color: ${darkText};\r\n  font-weight: ${fontWeightBold};\r\n  font-size: 1.75rem;\r\n\r\n  @media screen and (min-width: ${desktopBreakpoint}) {\r\n    font-size: 4rem;\r\n  }\r\n`\r\n\r\nconst Scoreboard = () => {\r\n  const [state] = useContext(GameContext);\r\n  return (\r\n    <ScoreboardContent>\r\n      <img src={LogoSVG} alt=\"Rock, Paper, Scissors\" />\r\n      <ScoreCard>\r\n        <ScoreTextHeading>Score</ScoreTextHeading>\r\n        <ScoreText>{state.score}</ScoreText>\r\n      </ScoreCard>\r\n    </ScoreboardContent>\r\n  );\r\n}\r\n\r\nexport default Scoreboard;","import styled, { css } from 'styled-components';\r\nimport { desktopBreakpoint } from './styles/theme'\r\n\r\nconst SelectorContainer = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  height: 130px;\r\n  width: 130px;\r\n  border-radius: 50%;\r\n  background: radial-gradient(${({ styleProps }) => styleProps.fromColor}, ${({ styleProps }) => styleProps.toColor});\r\n  box-shadow: inset 0px -6px 1px ${({ styleProps }) => styleProps.shadow};\r\n  ${({ styleProps }) => styleProps.position === 'left' && css`\r\n    top: 0px;\r\n    left: 30px;\r\n  `}\r\n  ${({ styleProps }) => styleProps.position === 'right' && css`\r\n    top: 0px;\r\n    right: 30px;\r\n  `}\r\n  ${({ styleProps }) => styleProps.position === 'bottom' && css`\r\n    left: 50%;\r\n    bottom: 0px;\r\n    margin-left: -65px;\r\n  `}\r\n  ${({ styleProps }) => styleProps.clickable === true && css`\r\n    cursor: pointer;\r\n  `}\r\n\r\n@media screen and (min-width: ${desktopBreakpoint}) {\r\n  width: 200px;\r\n  height: 200px;\r\n\r\n  ${({ styleProps }) => styleProps.position === 'left' && css`\r\n    top: 0px;\r\n    left: 0px;\r\n  `}\r\n  ${({ styleProps }) => styleProps.position === 'right' && css`\r\n    top: 0px;\r\n    right: 0px;\r\n  `}\r\n  ${({ styleProps }) => styleProps.position === 'bottom' && css`\r\n    left: 50%;\r\n    bottom: 0px;\r\n    margin-left: -100px;\r\n  `}\r\n  ${props => (props.selected || props.gameOver) && css`\r\n    height: 300px;\r\n    width: 300px;\r\n  `}\r\n  ${props => ((props.styleProps.position === 'left') && (props.selected)) && css`\r\n    top: 35px;\r\n    left: -105px;\r\n  `}\r\n  ${props => ((props.styleProps.position === 'right') && (props.selected)) && css`\r\n    top: 35px;\r\n    right: -105px;\r\n  `}\r\n  ${props => ((props.styleProps.position === 'left') && (props.gameOver)) && css`\r\n    top: 35px;\r\n    left: -240px;\r\n  `}\r\n  ${props => ((props.styleProps.position === 'right') && (props.gameOver)) && css`\r\n    top: 35px;\r\n    right: -240px;\r\n  `}\r\n  }\r\n`;\r\n\r\nexport default SelectorContainer;","import styled, { css } from 'styled-components';\r\nimport { desktopBreakpoint } from './styles/theme';\r\n\r\nconst Selector = styled.div`\r\n  margin: auto;\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  background: ${props => props.icon ? 'white' : '#16213D'}  url(${props => props.icon}) no-repeat center;\r\n  background-size: 45%;\r\n  box-shadow: ${props => props.icon ? 'inset 0px 6px 1px #C9D0DA' : 'none'};\r\n\r\n  @media screen and (min-width: ${desktopBreakpoint}) {\r\n    width: 155px;\r\n    height: 155px;\r\n    ${props => (props.selected || props.gameOver) && css`\r\n      height: 245px;\r\n      width: 245px;\r\n    `}\r\n  }\r\n`;\r\n\r\nexport default Selector;","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport GameContext from '../state/Context';\r\nimport { desktopBreakpoint, paperBgFrom, paperBgTo, rockBgFrom, rockBgTo, scissorsBgFrom, scissorsBgTo, paperShadow, rockShadow, scissorsShadow } from './styles/theme';\r\nimport backgroundTriangle from './styles/assets/bg-triangle.svg';\r\nimport rockSVG from './styles/assets/icon-rock.svg';\r\nimport paperSVG from './styles/assets/icon-paper.svg';\r\nimport scissorsSVG from './styles/assets/icon-scissors.svg';\r\nimport SelectorContainer from './SelectorContainer';\r\nimport Selector from './Selector';\r\n\r\nconst GamePhase1ViewContainer = styled.div`\r\n  margin: 130px auto;\r\n  height: 285px;\r\n  width: 375px;\r\n  position: relative;\r\n\r\n  background: url(${backgroundTriangle}) no-repeat center;\r\n  background-size: 50%;\r\n\r\n  @media screen and (min-width: ${desktopBreakpoint}) {\r\n    background-size: 270px;\r\n    height: 435px;\r\n    width: 480px;\r\n  }\r\n`;\r\n\r\nconst GamePhase1View = () => {\r\n  const [, dispatch] = useContext(GameContext);\r\n\r\n  const onPaperSelect = () => {\r\n    dispatch({\r\n      type: 'CHOOSE_PAPER'\r\n    })\r\n  };\r\n  const onScissorsSelect = () => {\r\n    dispatch({\r\n      type: 'CHOOSE_SCISSORS',\r\n    })\r\n  };\r\n  const onRockSelect = () => {\r\n    dispatch({\r\n      type: 'CHOOSE_ROCK'\r\n    })\r\n  };\r\n\r\n  return (\r\n    <GamePhase1ViewContainer>\r\n      <SelectorContainer\r\n        onClick={onPaperSelect}\r\n        styleProps={{\r\n          clickable: true,\r\n          position: 'left',\r\n          fromColor: paperBgFrom,\r\n          toColor: paperBgTo,\r\n          shadow: paperShadow,\r\n        }}>\r\n        <Selector icon={paperSVG} />\r\n      </SelectorContainer>\r\n      <SelectorContainer\r\n        onClick={onScissorsSelect}\r\n        styleProps={{\r\n          clickable: true,\r\n          position: 'right',\r\n          fromColor: scissorsBgFrom,\r\n          toColor: scissorsBgTo,\r\n          shadow: scissorsShadow,\r\n        }}>\r\n        <Selector icon={scissorsSVG} />\r\n      </SelectorContainer>\r\n      <SelectorContainer\r\n        onClick={onRockSelect}\r\n        styleProps={{\r\n          clickable: true,\r\n          position: 'bottom',\r\n          fromColor: rockBgFrom,\r\n          toColor: rockBgTo,\r\n          shadow: rockShadow,\r\n        }}>\r\n        <Selector icon={rockSVG} />\r\n      </SelectorContainer>\r\n    </GamePhase1ViewContainer>\r\n  );\r\n};\r\n\r\nexport default GamePhase1View;","import styled from 'styled-components';\r\nimport { desktopBreakpoint } from './styles/theme';\r\n\r\nconst GamePhase2ViewContainer = styled.div`\r\n  margin: 130px auto 285px;\r\n  height: 130px;\r\n  width: 375px;\r\n  position: relative;\r\n\r\n  @media screen and (min-width: ${desktopBreakpoint}) {\r\n    height: 435px;\r\n    width: 480px;\r\n    margin: 130px auto 130px;\r\n  }\r\n`;\r\n\r\nexport default GamePhase2ViewContainer;","import styled, { css } from 'styled-components';\r\nimport { desktopBreakpoint } from './styles/theme';\r\n\r\nconst PickText = styled.p`\r\nfont-size: 1rem;\r\ntext-transform: uppercase;\r\nposition: absolute;\r\ncolor: white;\r\nbottom: -40px;\r\n\r\n${props => props.left && css`\r\n  left: 50%;\r\n  margin-left: -37.5px;\r\n`}\r\n\r\n${props => props.right && css`\r\n  right: 50%;\r\n  margin-right: -60px;\r\n`}\r\n\r\n@media screen and (min-width: ${desktopBreakpoint}) {\r\n  letter-spacing: 2px;\r\n  font-size: 1.5rem;\r\n  top: -86px;\r\n  ${props => props.left && css`\r\n    left: 50%;\r\n    margin-left: -66px;\r\n  `}\r\n\r\n  ${props => props.right && css`\r\n    right: 50%;\r\n    margin-right: -114px;\r\n  `}\r\n}\r\n`;\r\n\r\nexport default PickText;","import { paperBgFrom, paperBgTo, rockBgFrom, rockBgTo, scissorsBgFrom, scissorsBgTo, paperShadow, rockShadow, scissorsShadow } from './theme';\r\nimport rockSVG from './assets/icon-rock.svg';\r\nimport paperSVG from './assets/icon-paper.svg';\r\nimport scissorsSVG from './assets/icon-scissors.svg';\r\n\r\nexport const chooseUserStyleProps = (state) => {\r\n  if (state.userPick === 'paper') {\r\n    return {\r\n      position: 'left',\r\n      fromColor: paperBgFrom,\r\n      toColor: paperBgTo,\r\n      shadow: paperShadow\r\n    }\r\n  } else if (state.userPick === 'scissors') {\r\n    return {\r\n      position: 'left',\r\n      fromColor: scissorsBgFrom,\r\n      toColor: scissorsBgTo,\r\n      shadow: scissorsShadow\r\n    }\r\n  } else if (state.userPick === 'rock') {\r\n    return {\r\n      position: 'left',\r\n      fromColor: rockBgFrom,\r\n      toColor: rockBgTo,\r\n      shadow: rockShadow\r\n    }\r\n  }\r\n};\r\n\r\nexport const chooseUserIcon = (state) => {\r\n  if (state.userPick === 'paper') {\r\n    return paperSVG\r\n  } else if (state.userPick === 'scissors') {\r\n    return scissorsSVG\r\n  } else if (state.userPick === 'rock') {\r\n    return rockSVG\r\n  }\r\n};\r\n\r\nexport const chooseComputerStyleProps = (state) => {\r\n  if (state.computerPick === 'paper') {\r\n    return {\r\n      position: 'right',\r\n      fromColor: paperBgFrom,\r\n      toColor: paperBgTo,\r\n      shadow: paperShadow\r\n    }\r\n  } else if (state.computerPick === 'scissors') {\r\n    return {\r\n      position: 'right',\r\n      fromColor: scissorsBgFrom,\r\n      toColor: scissorsBgTo,\r\n      shadow: scissorsShadow\r\n    }\r\n  } else if (state.computerPick === 'rock') {\r\n    return {\r\n      position: 'right',\r\n      fromColor: rockBgFrom,\r\n      toColor: rockBgTo,\r\n      shadow: rockShadow\r\n    }\r\n  }\r\n};\r\n\r\nexport const chooseComputerIcon = (state) => {\r\n  if (state.computerPick === 'paper') {\r\n    return paperSVG\r\n  } else if (state.computerPick === 'scissors') {\r\n    return scissorsSVG\r\n  } else if (state.computerPick === 'rock') {\r\n    return rockSVG\r\n  }\r\n};","import React, { useContext, useEffect } from 'react';\r\nimport GameContext from '../state/Context';\r\nimport GamePhase2ViewContainer from './GamePhaseContainer';\r\nimport SelectorContainer from './SelectorContainer';\r\nimport Selector from './Selector';\r\nimport PickText from './PickText';\r\nimport { chooseUserStyleProps, chooseUserIcon } from './styles/stylePropHelpers';\r\n\r\nconst GamePhase2View = () => {\r\n  const [state, dispatch] = useContext(GameContext);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: 'CHOOSE_COMPUTER'\r\n      })\r\n    }, 2000);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <GamePhase2ViewContainer>\r\n        <SelectorContainer selected styleProps={chooseUserStyleProps(state)}>\r\n          <Selector selected icon={chooseUserIcon(state)} />\r\n          <PickText left>you picked</PickText>\r\n        </SelectorContainer>\r\n        <SelectorContainer selected styleProps={{\r\n          position: 'right',\r\n          fromColor: 'none',\r\n          toColor: 'none',\r\n          shadow: 'none',\r\n        }}>\r\n          <Selector selected />\r\n          <PickText right>the house picked</PickText>\r\n        </SelectorContainer>\r\n      </GamePhase2ViewContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GamePhase2View;","import React, { useContext, useEffect } from 'react';\r\nimport GameContext from '../state/Context';\r\nimport GamePhase3ViewContainer from './GamePhaseContainer';\r\nimport SelectorContainer from './SelectorContainer';\r\nimport Selector from './Selector';\r\nimport PickText from './PickText';\r\nimport { chooseUserStyleProps, chooseUserIcon, chooseComputerStyleProps, chooseComputerIcon } from './styles/stylePropHelpers';\r\n\r\nconst GamePhase3View = () => {\r\n  const [state, dispatch] = useContext(GameContext);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: 'DETERMINE_WINNER'\r\n      })\r\n    }, 2000);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <GamePhase3ViewContainer>\r\n        <SelectorContainer selected styleProps={chooseUserStyleProps(state)}>\r\n          <Selector selected icon={chooseUserIcon(state)} />\r\n          <PickText left>you picked</PickText>\r\n        </SelectorContainer>\r\n        <SelectorContainer selected styleProps={chooseComputerStyleProps(state)}>\r\n          <Selector selected icon={chooseComputerIcon(state)} />\r\n          <PickText right>the house picked</PickText>\r\n        </SelectorContainer>\r\n      </GamePhase3ViewContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GamePhase3View;","import styled, { css } from 'styled-components';\r\nimport { lightText, darkText, fontWeightMed } from './styles/theme';\r\n\r\nconst Button = styled.button`\r\n  font-weight: ${fontWeightMed};\r\n  cursor: pointer;\r\n  outline: none;\r\n  border-radius: 10px;\r\n  border: ${props => props.inverted ? '#8690AB' : 'white'} 2px solid;\r\n  text-transform: uppercase;\r\n  background: ${props => props.inverted ? 'none' : 'white'};\r\n  color: ${props => props.inverted ? lightText : darkText};\r\n  padding: 15px 35px;\r\n  ${props => props.inverted && css`\r\n    padding: 11.5px 35px;\r\n  `};\r\n  letter-spacing: 2px;\r\n  margin-bottom: ${props => props.inverted ? '50px' : '0'};\r\n  :hover {\r\n    color: ${props => props.inverted ? lightText : 'hsl(349, 87%, 48%)'};\r\n  }\r\n`\r\nexport default Button;","import React, { useContext } from 'react';\r\nimport GameContext from '../state/Context';\r\nimport styled from 'styled-components';\r\nimport { desktopBreakpoint } from './styles/theme';\r\nimport Button from './Button';\r\n\r\nconst GameOverContainer = styled.div`\r\n  position: absolute;\r\n  bottom: -240px;\r\n  left: 20%;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media screen and (min-width: ${desktopBreakpoint}) {\r\n    bottom: 50%;\r\n    margin-bottom: -40px;\r\n    left: 26%;\r\n  }\r\n`;\r\n\r\nconst GameOverText = styled.p`\r\n  font-size: 3.75rem;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  color: white;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst GameOver = () => {\r\n  const [state, dispatch] = useContext(GameContext);\r\n  return (\r\n    <GameOverContainer>\r\n      {state.winner === \"Computer\" && <GameOverText>You lose</GameOverText>}\r\n      {state.winner === \"User\" && <GameOverText>You win</GameOverText>}\r\n      {state.winner === null && <GameOverText>It's a tie!</GameOverText>}\r\n      <Button onClick={() => dispatch({\r\n        type: 'RESET_STAGE'\r\n      })}>play again</Button>\r\n    </GameOverContainer>\r\n  );\r\n};\r\n\r\nexport default GameOver;","import React, { useContext } from 'react';\r\nimport GameContext from '../state/Context';\r\nimport GamePhase4ViewContainer from './GamePhaseContainer';\r\nimport SelectorContainer from './SelectorContainer';\r\nimport Selector from './Selector';\r\nimport PickText from './PickText';\r\nimport GameOver from './GameOver';\r\nimport { chooseUserStyleProps, chooseUserIcon, chooseComputerStyleProps, chooseComputerIcon } from './styles/stylePropHelpers';\r\n\r\nconst GamePhase4View = () => {\r\n  const [state] = useContext(GameContext);\r\n\r\n  return (\r\n    <>\r\n      <GamePhase4ViewContainer>\r\n        <SelectorContainer gameOver selected styleProps={chooseUserStyleProps(state)}>\r\n          <Selector gameOver selected icon={chooseUserIcon(state)} />\r\n          <PickText left>you picked</PickText>\r\n        </SelectorContainer>\r\n        <SelectorContainer gameOver selected styleProps={chooseComputerStyleProps(state)}>\r\n          <Selector gameOver selected icon={chooseComputerIcon(state)} />\r\n          <PickText right>the house picked</PickText>\r\n        </SelectorContainer>\r\n        <GameOver />\r\n      </GamePhase4ViewContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GamePhase4View;","import React, { useContext } from 'react';\r\nimport GameContext from '../state/Context';\r\nimport GamePhase1View from './GamePhase1View';\r\nimport GamePhase2View from './GamePhase2View';\r\nimport GamePhase3View from './GamePhase3View';\r\nimport GamePhase4View from './GamePhase4View';\r\n\r\nconst PlayArea = () => {\r\n  const [{ gameStage }] = useContext(GameContext);\r\n\r\n  return (\r\n    <div>\r\n      {gameStage === 1 && <GamePhase1View />}\r\n      {gameStage === 2 && <GamePhase2View />}\r\n      {gameStage === 3 && <GamePhase3View />}\r\n      {gameStage === 4 && <GamePhase4View />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayArea;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport closeButtonSVG from './styles/assets/icon-close.svg';\r\nimport gameRulesSVG from './styles/assets/image-rules.svg';\r\nimport { fontWeightBold, desktopBreakpoint } from './styles/theme';\r\n\r\nconst RulesModalContainerBg = styled.div`\r\n  position:fixed;\r\n  padding:0;\r\n  margin:0;\r\n\r\n  top: 0;\r\n  left: 0;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n  background:rgba(0,0,0,0.3);\r\n`\r\n\r\nconst RulesModalContainer = styled.div`\r\n    position: fixed;\r\n    padding: 0;\r\n    margin: 0;\r\n\r\n    top: 0;\r\n    left: 0;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n    background: white;\r\n        \r\n    h1 {\r\n      position: absolute;\r\n      top: 100px;\r\n      left: 50%;\r\n      margin-left: -37.2px;\r\n      text-transform: uppercase;\r\n      font-size: 2.2rem;\r\n      font-weight: ${fontWeightBold};\r\n    }\r\n\r\n    img{\r\n      position: absolute;\r\n      top: 240px;\r\n      left: 50%;\r\n      margin-left: -151px;\r\n    }\r\n\r\n    img:last-child {\r\n      position: absolute;\r\n      top: 665px;\r\n      cursor: pointer;\r\n      left: 50%;\r\n      margin-left: 0px;\r\n    }\r\n\r\n    @media screen and (min-width: ${desktopBreakpoint}) {\r\n      position: absolute;\r\n      height: 430px;\r\n      width: 410px;\r\n      top: 50%;\r\n      left: 50%;\r\n      margin-left: -200px;\r\n      margin-top: -570px;\r\n      border-radius: 15px;\r\n\r\n      h1 {\r\n        top: 20px;\r\n        left: 60px;\r\n      }\r\n\r\n      img{\r\n        top: 100px;\r\n      }\r\n\r\n      img:last-child {\r\n        top: 30px;\r\n        left: 360px;\r\n      }\r\n    }\r\n`;\r\n\r\nconst RulesModal = (props) => {\r\n  return (\r\n    <RulesModalContainerBg>\r\n      <RulesModalContainer>\r\n        <h1>Rules</h1>\r\n        <img src={gameRulesSVG} />\r\n        <img src={closeButtonSVG} onClick={props.handleClick} />\r\n      </RulesModalContainer>\r\n    </RulesModalContainerBg>\r\n  );\r\n};\r\n\r\nexport default RulesModal;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\nimport RulesModal from './RulesModal';\r\nimport { desktopBreakpoint } from './styles/theme'\r\n\r\nconst RulesSectionContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  position: relative;\r\n\r\n  @media screen and (min-width: ${desktopBreakpoint}) {\r\n    max-width: ${ desktopBreakpoint};\r\n    margin: auto;\r\n    padding: 0 30px;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\n\r\nconst RulesSection = () => {\r\n  const [modalIsOpen, toggleModalIsOpen] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    return toggleModalIsOpen(!modalIsOpen);\r\n  };\r\n\r\n  return (\r\n    <RulesSectionContainer>\r\n      {modalIsOpen && <RulesModal handleClick={handleClick} />}\r\n      <Button inverted\r\n        onClick={handleClick}\r\n      >Rules\r\n      </Button>\r\n    </RulesSectionContainer>\r\n  );\r\n}\r\n\r\nexport default RulesSection;","import { createGlobalStyle } from 'styled-components';\r\nimport { reset } from 'styled-reset';\r\nimport { bodyBgFrom, bodyBgTo } from './theme';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${reset};\r\n  * {\r\n    box-sizing: border-box;\r\n  };\r\n  html {\r\n    min-height: 100vh;\r\n  }\r\n  body {\r\n    background: radial-gradient(${bodyBgFrom}, ${bodyBgTo});\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    font-family: 'Barlow Semi Condensed', sans-serif;\r\n  };\r\n`\r\nexport default GlobalStyle;","import { getComputerChoice, determineWinner } from '../logic/determineWinner';\r\n\r\nexport const Reducer = (state, action) => {\r\n  const computerChoice = getComputerChoice();\r\n  switch (action.type) {\r\n    case 'CHOOSE_PAPER':\r\n      return { ...state, userPick: 'paper', gameStage: 2 }\r\n    case 'CHOOSE_SCISSORS':\r\n      return { ...state, userPick: 'scissors', gameStage: 2 }\r\n    case 'CHOOSE_ROCK':\r\n      return { ...state, userPick: 'rock', gameStage: 2 }\r\n    case 'CHOOSE_COMPUTER':\r\n      return { ...state, computerPick: computerChoice, gameStage: 3 }\r\n    case 'DETERMINE_WINNER':\r\n      const result = determineWinner(state.userPick, state.computerPick);\r\n      return {\r\n        ...state,\r\n        gameStage: 4,\r\n        winner: result.winner,\r\n        score:\r\n          (result.winner === 'User') ?\r\n            state.score + 1 :\r\n            (result.winner === 'Computer') ?\r\n              state.score - 1 : state.score\r\n      }\r\n    case 'RESET_STAGE':\r\n      return {\r\n        score: state.score,\r\n        gameStage: 1,\r\n        winner: null,\r\n        userPick: null,\r\n        computerPick: null\r\n      }\r\n    default:\r\n      return\r\n  }\r\n};","export const getComputerChoice = () => {\r\n  const rock = 0;\r\n  const paper = 1;\r\n  const scissors = 2;\r\n  const computerChoice = Math.floor(Math.random() * Math.floor(3));\r\n  if (computerChoice === rock) return 'rock'\r\n  if (computerChoice === paper) return 'paper'\r\n  if (computerChoice === scissors) return 'scissors'\r\n}\r\n\r\nexport const determineWinner = (userChoice, computerChoice) => {\r\n  const response = {\r\n    message: '',\r\n    winner: null,\r\n    userChoice,\r\n    computerChoice\r\n  };\r\n\r\n  if (userChoice === 'rock' && computerChoice === 'paper') {\r\n    response.message = 'You lose. Paper beats rock.';\r\n    response.winner = 'Computer';\r\n  } else if (userChoice === 'paper' && computerChoice === 'rock') {\r\n    response.message = 'You win. Paper beats rock.';\r\n    response.winner = 'User';\r\n  } else if (userChoice === 'scissors' && computerChoice === 'rock') {\r\n    response.message = 'You lose. Rock beats scissors.';\r\n    response.winner = 'Computer';\r\n  } else if (userChoice === 'rock' && computerChoice === 'scissors') {\r\n    response.message = 'You win. Rock beats scissors.';\r\n    response.winner = 'User';\r\n  } else if (userChoice === 'paper' && computerChoice === 'scissors') {\r\n    response.message = 'You lose. Scissors beats paper.';\r\n    response.winner = 'Computer';\r\n  } else if (userChoice === 'scissors' && computerChoice === 'paper') {\r\n    response.message = 'You Win. Scissors beats paper.';\r\n    response.winner = 'User';\r\n  } else {\r\n    response.message = 'It\\'s a tie!';\r\n  }\r\n  return response;\r\n}","import React, { useReducer } from 'react';\nimport GameContext from '../state/Context';\nimport Scoreboard from './Scoreboard';\nimport PlayArea from './PlayArea';\nimport RulesSection from './RulesSection';\nimport GlobalStyle from './styles/GlobalStyle';\nimport { Reducer } from '../state/Reducer';\n\nconst initialState = {\n  score: 0,\n  gameStage: 1,\n  winner: null,\n  userPick: null,\n  computerPick: null\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(Reducer, initialState);\n  return (\n    <div className=\"App\">\n      <GameContext.Provider value={[state, dispatch]}>\n        <GlobalStyle />\n        <Scoreboard />\n        <PlayArea />\n        <RulesSection />\n      </GameContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}